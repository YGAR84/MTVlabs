import string;
import lingo/pegcode/driver;

ArExp ::= ArPlus, ArMult, ArInt;
ArPlus(lhs:ArExp, rhs:ArExp);
ArMult(lhs:ArExp, rhs:ArExp);
ArInt(val: int);

ar2i(e: ArExp) -> int {
	switch(e){
		ArPlus(l, r): ar2i(l) + ar2i(r);
		ArMult(l, r): ar2i(l) * ar2i(r);
		ArInt(v): v;
	}
}

ar2s(e: ArExp) -> string {
	switch(e){
		ArPlus(l, r): "(" + ar2s(l) + "+" + ar2s(r) + ")";
		ArMult(l, r): "(" + ar2s(l) + "*" + ar2s(r) + ")";
		ArInt(v): i2s(v);
	}
}

s2ar(s: string) -> ArExp {
	gr = "#include ../Grammar.flow";
	parsic(compilePegGrammar(gr), s, defaultPegActions)
}


main(){
	a = ArPlus(ArInt(1), ArMult(ArInt(2), ArInt(3)));
	println(ar2i(a));
	println(ar2s(a));
	println(s2ar("(1+   ( 3 * 2 ))"));
}